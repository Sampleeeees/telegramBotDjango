import secrets
import asyncpg
import io
from io import BytesIO
from PIL import Image
from typing import List
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from telegramBotDjango.settings import BOT_KEY, DATABASES

bot = Bot(token=BOT_KEY)
dp = Dispatcher(bot)


async def connect_to_db():
    db_config = DATABASES['default']
    conn = await asyncpg.connect(
        user=db_config['USER'],
        password=db_config['PASSWORD'],
        host=db_config['HOST'],
        database=db_config['NAME']
    )
    return conn


async def save_user_data(user_data):
    conn = await connect_to_db()

    try:
        await conn.execute(
            'INSERT INTO tgbot_manage_telegramuser (id, username, first_name, last_name, password, photo) '
            'VALUES ($1, $2, $3, $4, $5, $6)',
            user_data['id'],
            user_data['username'],
            user_data['first_name'],
            user_data['last_name'],
            user_data['password'],
            memoryview(user_data['photo'])
        )
    finally:
        await conn.close()



@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.answer(
        f"–í—ñ—Ç–∞—é, {message.from_user.full_name}, —è —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Å–∞–π—Ç—É\n"
        "\n–û–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –≤ menuüëá",)


@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.answer(
        "–©–æ–± –∑–∞—Ä–∞—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å –æ–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É '/registration'\n"
        "\n–¢–∞–∫–æ–∂ —è–∫—â–æ —Ç–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π —Ç–æ –º–æ–∂–µ—à —Å–µ–±–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑ –±–∞–∑–∏ –∫–æ–º–∞–Ω–¥–æ—é '/delete_me'"
    )


@dp.message_handler(commands=['registration'])
async def process_registration_command(msg: types.Message):
    conn = await connect_to_db()

    try:
        result = await conn.fetchrow(
            'SELECT id FROM tgbot_manage_telegramuser WHERE id = $1',
            msg.from_user.id
        )
        if result:
            await msg.answer("–í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ.")
            return

        profile_photos = await msg.from_user.get_profile_photos()

        if not profile_photos.photos:
            # –Ø–∫—â–æ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î —Ñ–æ—Ç–æ, —Ç–æ –≤–∏—Ö–æ–¥–∏–º–æ
            await msg.answer('–£ –≤–∞—Å –Ω–µ–º–∞—î —Ñ–æ—Ç–æ')
            return

        last_photo = profile_photos.photos[-1][-1]

        photo_bytes = BytesIO()
        await last_photo.download(destination_file=photo_bytes)
        photo_bytes.seek(0)

        password = secrets.token_urlsafe(8)

        user_data = {
            'id': msg.from_user.id,
            'username': msg.from_user.username,
            'first_name': msg.from_user.first_name,
            'last_name': msg.from_user.last_name,
            'password': password,
            'photo': photo_bytes.getvalue()
        }


        await save_user_data(user_data)

        registration_message = (
            f"–í—ñ—Ç–∞—î–º–æ, {msg.from_user.first_name}!\n"
            f"–í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ –Ω–∞ –Ω–∞—à–æ–º—É —Å–µ—Ä–≤—ñ—Å—ñ.\n"
            f"–í–∞—à –ª–æ–≥—ñ–Ω: {msg.from_user.username}\n"
            f"–í–∞—à –ø–∞—Ä–æ–ª—å: {password}"
        )

        await msg.answer(registration_message)
    finally:
        await conn.close()

@dp.message_handler(commands=['delete_me'])
async def delete_user_from_db(msg: types.Message):
    conn = await connect_to_db()

    try:
        user_id = msg.from_user.id
        # –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ –≤–∫–∞–∑–∞–Ω–∏–º id
        res = await conn.fetch('SELECT * FROM tgbot_manage_telegramuser WHERE id = $1', user_id)
        if res:
            # —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —ñ—Å–Ω—É—î, —Ç–æ –≤–∏–¥–∞–ª—è—î–º–æ –π–æ–≥–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
            await conn.execute('DELETE FROM tgbot_manage_telegramuser WHERE id = $1', user_id)
            await msg.answer('–¢–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–∏–π')
        else:
            # —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ —ñ—Å–Ω—É—î, –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ —Ü–µ
            await msg.answer('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ç–∞–∫–∏–º id –Ω–µ —ñ—Å–Ω—É—î –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö')
    finally:
        await conn.close()






